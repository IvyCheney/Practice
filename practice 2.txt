x, y, z = 1, "python", ["hello", "world"]
 print(x)
 print(y)
 print(z)
 
 m = "py"
m += "th"
print(m)

#! /usr/bin/env python
#coding:utf-8
print ("请输入任意一个整数数字：")
number = int(input())   #通过 raw_input()输入的数字是字符串
                            #用 int()将该字符串转化为整数
if number == 10:
    print ("您输入的数字是：%d"%number)
    print ("You are SMART.")
elif number > 10:
    print ("您输入的数字是：%d"%number)
    print ("This number is more than 10.")
elif number < 10:
    print ("您输入的数字是：%d"%number)
    print ("This number is less than 10.")
else:
    print ("Are you a human?")
    
x = 2
y = 8
a = "python" if x>y else "qiwsir"
b = "python" if x<y else "qiwsir"
print(a)
print(b)

raw = [1,2,3,4,5,6,7,8,9,0]
print (raw)
b = raw.pop(0)
raw.append(b)
print (raw)

#!/usr/bin/env Python
# coding=utf-8
from __future__ import division
import random
score = [random.randint(0,100) for i in range(40)]    #0 到 100 之间，随机得到 40 个整数，组成列表
print (score)
num = len(score)
sum_score = sum(score)               #对列表中的整数求和
ave_num = sum_score/num              #计算平均数
less_ave = len([i for i in score if i<ave_num])    #将小于平均数的找出来，组成新的列表，并度量该列表的长度
print ("the average score is:%.1f" % ave_num)
print ("There are %d students less than average." % less_ave)
sorted_score = sorted(score, reverse=True)    #对原列表排序
print (sorted_score)

#!/usr/bin/env Python
# coding=utf-8
string = "I love  code."    #在 code 前面有两个空格，应该删除一个
print(string)                #为了能够清楚看到每步的结果，把过程中的量打印出来
str_lst = string.split(" ")    #以空格为分割，得到词汇的列表
print(str_lst)
words = [s for s in str_lst if s!=""]     #利用列表解析，将空格检出
print(words)

new_string = " ".join(words)    #以空格为连接符，将单词链接起来
print(new_string)